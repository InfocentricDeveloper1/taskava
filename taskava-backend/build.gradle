plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'org.flywaydb.flyway' version '9.22.3' apply false
    id 'org.sonarqube' version '4.4.1.3373'
    id 'com.google.cloud.tools.jib' version '3.4.0' apply false
}

allprojects {
    group = 'com.taskava'
    version = '1.0.0-SNAPSHOT'
    
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.0"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
        }
        
        dependencies {
            // Database
            dependency 'org.postgresql:postgresql:42.7.1'
            dependency 'org.flywaydb:flyway-core:9.22.3'
            
            // Security
            dependency 'io.jsonwebtoken:jjwt-api:0.12.3'
            dependency 'io.jsonwebtoken:jjwt-impl:0.12.3'
            dependency 'io.jsonwebtoken:jjwt-jackson:0.12.3'
            
            // Documentation
            dependency 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
            
            // Testing
            dependency 'org.testcontainers:testcontainers:1.19.3'
            dependency 'org.testcontainers:postgresql:1.19.3'
            dependency 'org.testcontainers:junit-jupiter:1.19.3'
            
            // Utilities
            dependency 'org.mapstruct:mapstruct:1.5.5.Final'
            dependency 'org.mapstruct:mapstruct-processor:1.5.5.Final'
            dependency 'com.google.guava:guava:32.1.3-jre'
            dependency 'org.apache.commons:commons-lang3:3.14.0'
            dependency 'commons-io:commons-io:2.15.1'
            
            // AWS
            dependency 'software.amazon.awssdk:bom:2.21.42'
        }
    }
    
    dependencies {
        // Lombok for all modules
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        // Testing dependencies for all modules
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.mockito:mockito-junit-jupiter'
        testImplementation 'org.assertj:assertj-core'
        
        // Logging
        implementation 'org.slf4j:slf4j-api'
    }
    
    tasks.named('test') {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
    
    // Configure compile options
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }
}

// Configure test reporting
task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn subprojects*.test
}

// Configure build cache
if (hasProperty('buildCacheEnabled') && buildCacheEnabled.toBoolean()) {
    buildCache {
        local {
            enabled = true
        }
    }
}

// Wrapper configuration
wrapper {
    gradleVersion = '8.5'
    distributionType = Wrapper.DistributionType.ALL
}